name: Web E2E Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'tests/web-e2e/**'
      - '.github/workflows/web-e2e-tests.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'tests/web-e2e/**'
  workflow_dispatch:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    name: Playwright E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: tests/web-e2e/package-lock.json
      
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('tests/web-e2e/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      
      - name: Install dependencies
        working-directory: tests/web-e2e
        run: npm ci
      
      - name: Install Playwright browsers
        working-directory: tests/web-e2e
        run: npx playwright install --with-deps ${{ matrix.browser }}
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      
      - name: Run Playwright tests
        working-directory: tests/web-e2e
        run: npx playwright test --project=${{ matrix.browser }}
        env:
          CI: true
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-results-${{ matrix.browser }}
          path: tests/web-e2e/test-results/
          retention-days: 7
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: tests/web-e2e/playwright-report/
          retention-days: 7
      
      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-artifacts-${{ matrix.browser }}
          path: |
            tests/web-e2e/test-results/
            tests/web-e2e/playwright-report/
          retention-days: 7
      
      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && always()
        with:
          script: |
            const fs = require('fs');
            const resultsPath = 'tests/web-e2e/test-results.json';
            
            if (fs.existsSync(resultsPath)) {
              const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
              const passed = results.suites.reduce((acc, suite) => acc + suite.specs.filter(s => s.ok).length, 0);
              const failed = results.suites.reduce((acc, suite) => acc + suite.specs.filter(s => !s.ok).length, 0);
              const total = passed + failed;
              
              const comment = `## 🎭 Playwright Test Results - ${{ matrix.browser }}
              
              - **Total Tests:** ${total}
              - **Passed:** ✅ ${passed}
              - **Failed:** ❌ ${failed}
              - **Pass Rate:** ${((passed/total)*100).toFixed(1)}%
              
              [View full report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  test-mobile:
    name: Playwright Mobile Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      matrix:
        device: ['iPhone 12', 'Pixel 5']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: tests/web-e2e/package-lock.json
      
      - name: Install dependencies
        working-directory: tests/web-e2e
        run: npm ci
      
      - name: Install Playwright
        working-directory: tests/web-e2e
        run: npx playwright install --with-deps chromium webkit
      
      - name: Run mobile tests
        working-directory: tests/web-e2e
        run: npx playwright test --project="${{ matrix.device }}"
        env:
          CI: true
      
      - name: Upload mobile test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: mobile-results-${{ matrix.device }}
          path: tests/web-e2e/playwright-report/
          retention-days: 7

  accessibility:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: tests/web-e2e/package-lock.json
      
      - name: Install dependencies
        working-directory: tests/web-e2e
        run: npm ci
      
      - name: Install Playwright
        working-directory: tests/web-e2e
        run: npx playwright install --with-deps chromium
      
      - name: Run accessibility tests
        working-directory: tests/web-e2e
        run: npx playwright test accessibility.spec.ts
        env:
          CI: true
      
      - name: Upload a11y results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: accessibility-results
          path: tests/web-e2e/playwright-report/
          retention-days: 7

  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test, test-mobile, accessibility]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          echo "## 🎭 Web E2E Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ All test suites completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Desktop Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Mobile Tests: ${{ needs.test-mobile.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Accessibility Tests: ${{ needs.accessibility.result }}" >> $GITHUB_STEP_SUMMARY
